{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport * as JWT from 'jwt-decode';\nconst isTokenValid = token => {\n  try {\n    const decoded = JWT.jwtDecode(token);\n    const currentTime = Date.now() / 1000;\n    return decoded.exp > currentTime;\n  } catch (error) {\n    return false;\n  }\n};\nconst initialState = {\n  user: JSON.parse(localStorage.getItem(\"user\") || \"null\"),\n  token: isTokenValid(localStorage.getItem(\"token\")) ? localStorage.getItem(\"token\") : null,\n  isAuthenticated: !!localStorage.getItem(\"token\") && isTokenValid(localStorage.getItem(\"token\")),\n  error: null\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n      state.error = null;\n      localStorage.setItem(\"token\", action.payload.token);\n      localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  loginSuccess,\n  logout,\n  setError,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","JWT","isTokenValid","token","decoded","jwtDecode","currentTime","Date","now","exp","error","initialState","user","JSON","parse","localStorage","getItem","isAuthenticated","authSlice","name","reducers","loginSuccess","state","action","payload","setItem","stringify","logout","removeItem","setError","clearError","actions","reducer"],"sources":["/home/nonefound/WEB/web_lab4/frontend/src/store/authSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport * as JWT from 'jwt-decode';\n\nconst isTokenValid = (token) => {\n    try {\n        const decoded = JWT.jwtDecode(token);\n        const currentTime = Date.now() / 1000;\n        return decoded.exp > currentTime;\n    } catch (error) {\n        return false;\n    }\n};\n\nconst initialState = {\n    user: JSON.parse(localStorage.getItem(\"user\") || \"null\"),\n    token: isTokenValid(localStorage.getItem(\"token\")) ? localStorage.getItem(\"token\") : null,\n    isAuthenticated: !!localStorage.getItem(\"token\") && isTokenValid(localStorage.getItem(\"token\")),\n    error: null,\n};\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        loginSuccess: (state, action) => {\n            state.user = action.payload.user;\n            state.token = action.payload.token;\n            state.isAuthenticated = true;\n            state.error = null;\n\n            localStorage.setItem(\"token\", action.payload.token);\n            localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\n        },\n        logout: (state) => {\n            state.user = null;\n            state.token = null;\n            state.isAuthenticated = false;\n\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"user\");\n        },\n        setError: (state, action) => {\n            state.error = action.payload;\n        },\n        clearError: (state) => {\n            state.error = null;\n        },\n    },\n});\n\nexport const { loginSuccess, logout, setError, clearError } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,GAAG,MAAM,YAAY;AAEjC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC5B,IAAI;IACA,MAAMC,OAAO,GAAGH,GAAG,CAACI,SAAS,CAACF,KAAK,CAAC;IACpC,MAAMG,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IACrC,OAAOJ,OAAO,CAACK,GAAG,GAAGH,WAAW;EACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,OAAO,KAAK;EAChB;AACJ,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC;EACxDb,KAAK,EAAED,YAAY,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAGD,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI;EACzFC,eAAe,EAAE,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAId,YAAY,CAACa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;EAC/FN,KAAK,EAAE;AACX,CAAC;AAED,MAAMQ,SAAS,GAAGlB,WAAW,CAAC;EAC1BmB,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE;IACNC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACV,IAAI,GAAGW,MAAM,CAACC,OAAO,CAACZ,IAAI;MAChCU,KAAK,CAACnB,KAAK,GAAGoB,MAAM,CAACC,OAAO,CAACrB,KAAK;MAClCmB,KAAK,CAACL,eAAe,GAAG,IAAI;MAC5BK,KAAK,CAACZ,KAAK,GAAG,IAAI;MAElBK,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACC,OAAO,CAACrB,KAAK,CAAC;MACnDY,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACH,MAAM,CAACC,OAAO,CAACZ,IAAI,CAAC,CAAC;IACrE,CAAC;IACDe,MAAM,EAAGL,KAAK,IAAK;MACfA,KAAK,CAACV,IAAI,GAAG,IAAI;MACjBU,KAAK,CAACnB,KAAK,GAAG,IAAI;MAClBmB,KAAK,CAACL,eAAe,GAAG,KAAK;MAE7BF,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;MAChCb,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;IACnC,CAAC;IACDC,QAAQ,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACZ,KAAK,GAAGa,MAAM,CAACC,OAAO;IAChC,CAAC;IACDM,UAAU,EAAGR,KAAK,IAAK;MACnBA,KAAK,CAACZ,KAAK,GAAG,IAAI;IACtB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEW,YAAY;EAAEM,MAAM;EAAEE,QAAQ;EAAEC;AAAW,CAAC,GAAGZ,SAAS,CAACa,OAAO;AAC/E,eAAeb,SAAS,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}