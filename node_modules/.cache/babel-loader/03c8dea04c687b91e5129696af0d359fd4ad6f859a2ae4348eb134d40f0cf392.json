{"ast":null,"code":"var _jsxFileName = \"/home/nonefound/WEB/web_lab4/frontend/src/components/Graph.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, forwardRef, useImperativeHandle } from \"react\";\nimport GraphPainter from \"./GraphPainter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(function Graph({\n  width,\n  height,\n  radius,\n  onAddResult,\n  token,\n  results\n}, ref) {\n  _s();\n  const canvasRef = useRef(null);\n  const graphPainterRef = useRef(null);\n  const [points, setpoints] = useState(results);\n\n  // загрузка точек\n  const fetchPoints = async () => {\n    if (!token) return;\n    try {\n      const url = `http://localhost:24147/backend/api/results`;\n      const response = await fetch(url, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setpoints(data);\n      } else {\n        console.error(`Ошибка загрузки точек: ${response.status} ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error(`Ошибка при запросе точек: ${error}`);\n    }\n  };\n  const drawGraph = () => {\n    if (!graphPainterRef.current) return;\n    graphPainterRef.current.redrawAll(radius);\n    points.forEach(point => {\n      var _graphPainterRef$curr;\n      (_graphPainterRef$curr = graphPainterRef.current) === null || _graphPainterRef$curr === void 0 ? void 0 : _graphPainterRef$curr.drawPoint(point.x, point.y, point.isHit);\n    });\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        graphPainterRef.current = new GraphPainter(canvas, ctx, radius);\n      }\n    }\n    fetchPoints();\n    return () => {\n      graphPainterRef.current = null;\n    };\n  }, []);\n  useEffect(() => {\n    setpoints(results);\n  }, [results]);\n  useEffect(() => {\n    drawGraph();\n  }, [radius, points]);\n  const clearGraph = () => {\n    if (graphPainterRef.current) {\n      graphPainterRef.current.redrawAll(radius);\n      setpoints([]);\n    }\n  };\n  useImperativeHandle(ref, () => ({\n    clearGraph\n  }));\n  const handleCanvasClick = async event => {\n    const canvas = canvasRef.current;\n    if (!canvas || !graphPainterRef.current) return;\n    const rect = canvas.getBoundingClientRect();\n    const pointInPixels = 300 / 12;\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n    const xPixels = event.clientX - rect.left;\n    const yPixels = event.clientY - rect.top;\n    const x = ((xPixels - centerX) / pointInPixels).toFixed(2);\n    const y = ((centerY - yPixels) / pointInPixels).toFixed(2);\n    if (parseFloat(x) > 5 || parseFloat(x) < -3 || parseFloat(y) > 3 || parseFloat(y) < -3) {\n      alert(\"Клик вне зоны графика. -3<= x <= 5, -3 <= y <= 3\");\n      return;\n    }\n    try {\n      const url = `http://localhost:24147/backend/api/results`;\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          x: parseFloat(x),\n          y: parseFloat(y),\n          r: radius\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        graphPainterRef.current.drawPoint(data.x, data.y, data.isHit === true);\n        setpoints(prevPoints => [...prevPoints, data]);\n        onAddResult(data);\n      } else {\n        console.error(`Ошибка: ${response.status} ${response.statusText}`);\n      }\n    } catch (error) {\n      console.error(`Произошла ошибка: ${error}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height,\n    onClick: handleCanvasClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}, \"MLWiTnlowV948MbqH2hbG8KhaRM=\")), \"MLWiTnlowV948MbqH2hbG8KhaRM=\");\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$forwardRef\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useRef","useState","forwardRef","useImperativeHandle","GraphPainter","jsxDEV","_jsxDEV","_c2","_s","_c","Graph","width","height","radius","onAddResult","token","results","ref","canvasRef","graphPainterRef","points","setpoints","fetchPoints","url","response","fetch","method","headers","Authorization","ok","data","json","console","error","status","statusText","drawGraph","current","redrawAll","forEach","point","_graphPainterRef$curr","drawPoint","x","y","isHit","canvas","ctx","getContext","clearGraph","handleCanvasClick","event","rect","getBoundingClientRect","pointInPixels","centerX","centerY","xPixels","clientX","left","yPixels","clientY","top","toFixed","parseFloat","alert","body","JSON","stringify","r","prevPoints","onClick","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["/home/nonefound/WEB/web_lab4/frontend/src/components/Graph.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState, forwardRef, useImperativeHandle} from \"react\";\nimport GraphPainter from \"./GraphPainter\";\n\ninterface GraphProps {\n    width: number;\n    height: number;\n    radius: number;\n    onAddResult: (result: any) => void;\n    token: string | null;\n    results: any[];\n}\n\nexport default forwardRef(function Graph({ width, height, radius, onAddResult, token, results }: GraphProps, ref) {\n    const canvasRef = useRef<HTMLCanvasElement | null>(null);\n    const graphPainterRef = useRef<GraphPainter | null>(null);\n    const [points, setpoints] = useState<any[]>(results);\n\n    // загрузка точек\n    const fetchPoints = async () => {\n        if (!token) return;\n\n        try {\n            const url = `http://localhost:24147/backend/api/results`;\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setpoints(data);\n            } else {\n                console.error(`Ошибка загрузки точек: ${response.status} ${response.statusText}`);\n            }\n        } catch (error) {\n            console.error(`Ошибка при запросе точек: ${error}`);\n        }\n    };\n\n    const drawGraph = () => {\n        if (!graphPainterRef.current) return;\n\n        graphPainterRef.current.redrawAll(radius);\n\n        points.forEach((point) => {\n            graphPainterRef.current?.drawPoint(\n                point.x,\n                point.y,\n                point.isHit\n            );\n        });\n    };\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n\n        if (canvas) {\n            const ctx = canvas.getContext(\"2d\");\n            if (ctx) {\n                graphPainterRef.current = new GraphPainter(canvas, ctx, radius);\n            }\n        }\n\n        fetchPoints();\n\n        return () => {\n            graphPainterRef.current = null;\n        };\n    }, []);\n\n    useEffect(() => {\n        setpoints(results);\n    }, [results]);\n\n    useEffect(() => {\n        drawGraph();\n    }, [radius, points]);\n\n    const clearGraph = () => {\n        if (graphPainterRef.current) {\n            graphPainterRef.current.redrawAll(radius);\n            setpoints([]);\n        }\n    };\n\n\n    useImperativeHandle(ref, () => ({\n        clearGraph,\n    }));\n\n\n    const handleCanvasClick = async (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const canvas = canvasRef.current;\n        if (!canvas || !graphPainterRef.current) return;\n\n        const rect = canvas.getBoundingClientRect();\n        const pointInPixels = 300 / 12;\n        const centerX = canvas.width / 2;\n        const centerY = canvas.height / 2;\n\n        const xPixels = event.clientX - rect.left;\n        const yPixels = event.clientY - rect.top;\n\n        const x = ((xPixels - centerX) / pointInPixels).toFixed(2);\n        const y = ((centerY - yPixels) / pointInPixels).toFixed(2);\n\n        if (parseFloat(x) > 5 || parseFloat(x) < -3 || parseFloat(y) > 3 || parseFloat(y) < -3) {\n            alert(\"Клик вне зоны графика. -3<= x <= 5, -3 <= y <= 3\");\n            return;\n        }\n\n        try {\n            const url = `http://localhost:24147/backend/api/results`;\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({ x: parseFloat(x), y: parseFloat(y), r: radius }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                graphPainterRef.current.drawPoint(data.x, data.y, data.isHit === true);\n                setpoints((prevPoints) => [...prevPoints, data]);\n                onAddResult(data);\n            } else {\n                console.error(`Ошибка: ${response.status} ${response.statusText}`);\n            }\n        } catch (error) {\n            console.error(`Произошла ошибка: ${error}`);\n        }\n    };\n\n    return (\n        <canvas\n            ref={canvasRef}\n            width={width}\n            height={height}\n            onClick={handleCanvasClick}\n            />\n    )\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}