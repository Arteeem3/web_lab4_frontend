{"ast":null,"code":"export default class GraphPainter {\n  constructor(canvas, context, r) {\n    this.SIZE = 300;\n    this.LINE_WIDTH = 1.5;\n    this.TEXT_MARGIN = 15;\n    this.TEXT_LINE_HEIGHT = 3;\n    this.COLOR_RED = \"#b50300\";\n    this.COLOR_GREEN = \"#66FF66\";\n    this.COLOR_MAIN = \"#9999CC\";\n    this.WIDTH_IN_POINTS = 12;\n    this.canvas = void 0;\n    this.ctx = void 0;\n    this.r = void 0;\n    this.canvas = canvas;\n    this.ctx = context;\n    this.r = r;\n  }\n  redrawAll(r) {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawGraph(r);\n    this.drawAxes();\n    this.setPointerAtDot(3);\n    this.setPointerAtDot(1);\n    this.setPointerAtDot(-1);\n    this.setPointerAtDot(2);\n    this.setPointerAtDot(-2);\n    this.setPointerAtDot(5);\n    this.setPointerAtDot(-5);\n  }\n  drawAxes() {\n    this.ctx.fillStyle = \"#666666\";\n    this.drawArrow(-this.SIZE, this.SIZE / 2, this.SIZE, this.SIZE / 2);\n    this.drawArrow(this.SIZE / 2, this.SIZE, this.SIZE / 2, 0);\n  }\n  drawGraph(r) {\n    const pointInPixels = this.SIZE / this.WIDTH_IN_POINTS;\n    this.ctx.fillStyle = this.COLOR_MAIN;\n    this.ctx.fillRect(this.SIZE / 2, this.SIZE / 2 - r * pointInPixels, r * pointInPixels, r * pointInPixels);\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.SIZE / 2, this.SIZE / 2);\n    this.ctx.lineTo(this.SIZE / 2, this.SIZE / 2 + r * pointInPixels);\n    this.ctx.lineTo(this.SIZE / 2 + r * pointInPixels, this.SIZE / 2);\n    this.ctx.lineTo(this.SIZE / 2, this.SIZE / 2);\n    this.ctx.fill();\n    this.ctx.beginPath();\n    this.ctx.arc(this.SIZE / 2, this.SIZE / 2, r / 2 * pointInPixels, Math.PI, 3 / 2 * Math.PI);\n    this.ctx.moveTo(this.SIZE / 2, this.SIZE / 2);\n    this.ctx.lineTo(this.SIZE / 2, this.SIZE / 2 - r / 2 * pointInPixels);\n    this.ctx.lineTo(this.SIZE / 2 - r / 2 * pointInPixels, this.SIZE / 2);\n    this.ctx.lineTo(this.SIZE / 2, this.SIZE / 2);\n    this.ctx.fill();\n  }\n  setPointerAtDot(max_r = 5) {\n    const pointInPixels = this.SIZE / this.WIDTH_IN_POINTS;\n    this.ctx.textAlign = \"center\";\n    this.ctx.textBaseline = \"middle\";\n    this.ctx.fillText(`${max_r}`, this.SIZE / 2 + pointInPixels * max_r, this.SIZE / 2 - this.TEXT_MARGIN);\n    this.ctx.fillText(`${max_r}`, this.SIZE / 2 + this.TEXT_MARGIN, this.SIZE / 2 - pointInPixels * max_r);\n    this.ctx.beginPath();\n    this.ctx.lineWidth = this.LINE_WIDTH;\n    this.ctx.moveTo(this.SIZE / 2 + pointInPixels * max_r, this.SIZE / 2 + this.TEXT_LINE_HEIGHT);\n    this.ctx.lineTo(this.SIZE / 2 + pointInPixels * max_r, this.SIZE / 2 - this.TEXT_LINE_HEIGHT);\n    this.ctx.moveTo(this.SIZE / 2 + this.TEXT_LINE_HEIGHT, this.SIZE / 2 - pointInPixels * max_r);\n    this.ctx.lineTo(this.SIZE / 2 - this.TEXT_LINE_HEIGHT, this.SIZE / 2 - pointInPixels * max_r);\n    this.ctx.stroke();\n  }\n  drawArrow(fromx, fromy, tox, toy) {\n    let headlen = 10; // length of head in pixels\n    let dx = tox - fromx;\n    let dy = toy - fromy;\n    let angle = Math.atan2(dy, dx);\n    this.ctx.strokeStyle = \"#666666\";\n    this.ctx.beginPath();\n    this.ctx.lineWidth = this.LINE_WIDTH;\n    this.ctx.moveTo(fromx, fromy);\n    this.ctx.lineTo(tox, toy);\n    this.ctx.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\n    this.ctx.moveTo(tox, toy);\n    this.ctx.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\n    this.ctx.stroke();\n  }\n  drawPoint(x, y, success = true) {\n    const totalPoints = 12;\n    this.ctx.fillStyle = success ? this.COLOR_GREEN : this.COLOR_RED;\n    const pointInPixels = this.SIZE / totalPoints;\n    this.ctx.beginPath();\n    this.ctx.arc(this.SIZE / 2 + pointInPixels * x, this.SIZE / 2 - y * pointInPixels, 2, 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n}","map":{"version":3,"names":["GraphPainter","constructor","canvas","context","r","SIZE","LINE_WIDTH","TEXT_MARGIN","TEXT_LINE_HEIGHT","COLOR_RED","COLOR_GREEN","COLOR_MAIN","WIDTH_IN_POINTS","ctx","redrawAll","clearRect","width","height","drawGraph","drawAxes","setPointerAtDot","fillStyle","drawArrow","pointInPixels","fillRect","beginPath","moveTo","lineTo","fill","arc","Math","PI","max_r","textAlign","textBaseline","fillText","lineWidth","stroke","fromx","fromy","tox","toy","headlen","dx","dy","angle","atan2","strokeStyle","cos","sin","drawPoint","x","y","success","totalPoints"],"sources":["/home/nonefound/WEB/web_lab4/frontend/src/components/GraphPainter.ts"],"sourcesContent":["export default class GraphPainter {\n    SIZE = 300;\n    LINE_WIDTH = 1.5;\n    TEXT_MARGIN = 15;\n    TEXT_LINE_HEIGHT = 3;\n    COLOR_RED = \"#b50300\"\n    COLOR_GREEN = \"#66FF66\"\n    COLOR_MAIN = \"#9999CC\"\n    WIDTH_IN_POINTS = 12;\n\n    canvas: HTMLCanvasElement\n    ctx: CanvasRenderingContext2D\n    r: number | undefined\n\n    constructor(canvas: HTMLCanvasElement,\n                context: CanvasRenderingContext2D,\n                r: number | undefined\n                ) {\n        this.canvas = canvas;\n        this.ctx = context;\n        this.r = r;\n    }\n\n    redrawAll(r: number){\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.drawGraph(r);\n        this.drawAxes();\n        this.setPointerAtDot(3);\n        this.setPointerAtDot(1);\n        this.setPointerAtDot(-1)\n        this.setPointerAtDot(2)\n        this.setPointerAtDot(-2)\n        this.setPointerAtDot(5)\n        this.setPointerAtDot(-5)\n    }\n\n    drawAxes() {\n        this.ctx.fillStyle = \"#666666\";\n        this.drawArrow(-this.SIZE, this.SIZE / 2, this.SIZE, this.SIZE / 2);\n        this.drawArrow( this.SIZE / 2, this.SIZE, this.SIZE / 2, 0);\n    }\n\n    drawGraph(r: number){\n        const pointInPixels = this.SIZE / this.WIDTH_IN_POINTS;\n        this.ctx.fillStyle = this.COLOR_MAIN;\n\n        this.ctx.fillRect(\n            this.SIZE / 2,\n            this.SIZE / 2 - r * pointInPixels,\n            r * pointInPixels,\n            r * pointInPixels\n        );\n\n        this.ctx.beginPath();\n        this.ctx.moveTo(this.SIZE / 2, this.SIZE / 2);\n        this.ctx.lineTo(this.SIZE / 2, this.SIZE / 2 + r * pointInPixels);\n        this.ctx.lineTo(this.SIZE / 2 + r * pointInPixels, this.SIZE / 2);\n        this.ctx.lineTo(this.SIZE / 2, this.SIZE / 2);\n        this.ctx.fill();\n\n        this.ctx.beginPath();\n        this.ctx.arc(\n            this.SIZE / 2,\n            this.SIZE / 2,\n            r / 2 * pointInPixels,\n            Math.PI,\n            3 / 2 * Math.PI\n        );\n        this.ctx.moveTo(this.SIZE / 2, this.SIZE / 2);\n        this.ctx.lineTo(this.SIZE / 2, this.SIZE / 2 - r / 2 * pointInPixels);\n        this.ctx.lineTo(this.SIZE / 2 - r / 2 * pointInPixels, this.SIZE / 2);\n        this.ctx.lineTo(this.SIZE / 2, this.SIZE / 2);\n        this.ctx.fill();\n    }\n\n    setPointerAtDot(max_r = 5) {\n        const pointInPixels = this.SIZE / this.WIDTH_IN_POINTS;\n        this.ctx.textAlign = \"center\";\n        this.ctx.textBaseline = \"middle\";\n        this.ctx.fillText(`${max_r}`, this.SIZE / 2 + pointInPixels * max_r, this.SIZE / 2 - this.TEXT_MARGIN);\n        this.ctx.fillText(`${max_r}`, this.SIZE / 2 + this.TEXT_MARGIN, this.SIZE / 2 - pointInPixels * max_r);\n\n        this.ctx.beginPath()\n        this.ctx.lineWidth = this.LINE_WIDTH;\n        this.ctx.moveTo(this.SIZE / 2 + pointInPixels * max_r, this.SIZE / 2 + this.TEXT_LINE_HEIGHT);\n        this.ctx.lineTo(this.SIZE / 2 + pointInPixels * max_r, this.SIZE / 2 - this.TEXT_LINE_HEIGHT);\n        this.ctx.moveTo(this.SIZE / 2 + this.TEXT_LINE_HEIGHT, this.SIZE / 2 - pointInPixels * max_r);\n        this.ctx.lineTo(this.SIZE / 2 - this.TEXT_LINE_HEIGHT, this.SIZE / 2 - pointInPixels * max_r);\n        this.ctx.stroke();\n    }\n\n    drawArrow(fromx, fromy, tox, toy) {\n        let headlen = 10; // length of head in pixels\n        let dx = tox - fromx;\n        let dy = toy - fromy;\n        let angle = Math.atan2(dy, dx);\n        this.ctx.strokeStyle = \"#666666\";\n        this.ctx.beginPath();\n        this.ctx.lineWidth = this.LINE_WIDTH;\n        this.ctx.moveTo(fromx, fromy);\n        this.ctx.lineTo(tox, toy);\n        this.ctx.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\n        this.ctx.moveTo(tox, toy);\n        this.ctx.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\n        this.ctx.stroke();\n    }\n\n    drawPoint(x: number, y: number, success = true) {\n        const totalPoints = 12;\n        this.ctx.fillStyle = success\n            ? this.COLOR_GREEN\n            : this.COLOR_RED;\n        const pointInPixels = this.SIZE / totalPoints;\n        this.ctx.beginPath();\n        this.ctx.arc(\n            this.SIZE / 2 + pointInPixels * x,\n            this.SIZE / 2 - y * pointInPixels,\n            2,\n            0,\n            Math.PI * 2,\n        );\n        this.ctx.fill();\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}